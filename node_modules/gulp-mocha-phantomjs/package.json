{
  "name": "gulp-mocha-phantomjs",
  "version": "0.4.0",
  "description": "run client-side Mocha tests with PhantomJS",
  "keywords": [
    "gulpplugin",
    "mocha",
    "phantomjs",
    "test",
    "testing",
    "framework",
    "runner",
    "unit",
    "spec",
    "tdd",
    "bdd"
  ],
  "author": {
    "name": "Rui Hu",
    "email": "ruihu.pvt@gmail.com"
  },
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "dependencies": {
    "gulp-util": "^2.2.14",
    "mocha-phantomjs": "^3.3.2",
    "phantomjs": "^1.9.0",
    "through2": "^0.4.1"
  },
  "devDependencies": {
    "gulp": "^3.5.6",
    "gulp-jshint": "^1.5.0",
    "gulp-mocha": "^0.4.1",
    "mocha": "^1.18.2",
    "should": "^3.2.0"
  },
  "homepage": "https://github.com/mrhooray/gulp-mocha-phantomjs",
  "repository": {
    "type": "git",
    "url": "git://github.com/mrhooray/gulp-mocha-phantomjs.git"
  },
  "bugs": {
    "url": "https://github.com/mrhooray/gulp-mocha-phantomjs/issues"
  },
  "license": "MIT",
  "readme": "# [gulp](https://github.com/wearefractal/gulp)-mocha-phantomjs [![Build Status](https://travis-ci.org/mrhooray/gulp-mocha-phantomjs.svg?branch=master)](https://travis-ci.org/mrhooray/gulp-mocha-phantomjs)\n> run client-side [Mocha](https://github.com/visionmedia/mocha) tests with [PhantomJS](https://github.com/ariya/phantomjs)\n\n## Installation\n### node\n```shell\n$ npm install gulp-mocha-phantomjs --save-dev\n```\n\n## Usage\n```html\n<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Mocha Test Runner</title>\n    <link rel=\"stylesheet\" href=\"bower_components/mocha/mocha.css\">\n  </head>\n  <body>\n    <div id=\"mocha\"></div>\n    <script src=\"bower_components/mocha/mocha.js\"></script>\n    <script src=\"bower_components/should/should.js\"></script>\n    <script>mocha.setup('bdd')</script>\n    <script src=\"spec/test.js\"></script>\n    <script>\n      if (window.mochaPhantomJS) {\n        mochaPhantomJS.run();\n      } else {\n        mocha.run();\n      }\n    </script>\n  </body>\n</html>\n```\n\n```javascript\nvar gulp = require('gulp');\nvar mochaPhantomJS = require('gulp-mocha-phantomjs');\n\ngulp.task('test', function () {\n  return gulp\n  .src('test/runner.html')\n  .pipe(mochaPhantomJS());\n});\n```\n\nThe reporter can be chosen by supplying an object with `reporter` property:\n\n```javascript\ngulp.task('test', function () {\n  return gulp\n  .src('test/runner.html')\n  .pipe(mochaPhantomJS({reporter: 'nyan'}));\n});\n```\n\nYou can set the `dump` option to write the results of mocha tests in a file:\n\n```javascript\ngulp.task('test', function () {\n  return gulp\n  .src('test/runner.html')\n  .pipe(mochaPhantomJS({reporter: 'xunit', dump:'test.xml'}));\n});\n```\n\nTo test against remote by url:\n\n```javascript\ngulp.task('test', function () {\n  var stream = mochaPhantomJS();\n  stream.write({path: 'http://localhost:8000/index.html'});\n  stream.end();\n  return stream;\n});\n```\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "gulp-mocha-phantomjs@0.4.0",
  "dist": {
    "shasum": "68d35ccb525093ce7538446f614fd6f9885ceb4d"
  },
  "_from": "gulp-mocha-phantomjs@",
  "_resolved": "https://registry.npmjs.org/gulp-mocha-phantomjs/-/gulp-mocha-phantomjs-0.4.0.tgz"
}
